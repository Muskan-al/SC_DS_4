# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load your dataset
# Replace the path with your actual dataset location
df = pd.read_csv('/Users/11b51/Downloads/RTA Dataset.csv')

# Display the first few rows of the dataset
print("Dataset Preview:")
print(df.head())

# Check for missing values
print("\nMissing Values in Each Column:")
print(df.isnull().sum())

# Drop any columns with too many missing values (adjust threshold as needed)
df_cleaned = df.dropna(thresh=len(df) * 0.6, axis=1)  # Example: keep columns with at least 60% data

# For simplicity, fill missing values in important columns with a placeholder, e.g., 'Unknown'
df_cleaned = df_cleaned.fillna('Unknown')

# Add a new column 'datetime' based on the 'Time' column with a fixed placeholder date
# If your dataset has a date column, combine it with 'Time' for accurate datetime values
df_cleaned['datetime'] = pd.to_datetime('2023-01-01 ' + df_cleaned['Time'], errors='coerce')

# Extract hour from 'datetime' to analyze accidents based on time of day
df_cleaned['hour'] = df_cleaned['datetime'].dt.hour

# Check for unique values in categorical columns (e.g., 'Day_of_week', 'Sex_of_driver')
print("\nUnique Values in Categorical Columns:")
print(df_cleaned['Day_of_week'].unique())
print(df_cleaned['Sex_of_driver'].unique())

# Visualize the distribution of accidents by hour of the day
plt.figure(figsize=(10, 6))
sns.countplot(x='hour', data=df_cleaned, palette='viridis')
plt.title('Traffic Accidents by Hour of the Day')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Accidents')
plt.show()

# Visualize the distribution of accidents by day of the week
plt.figure(figsize=(10, 6))
sns.countplot(x='Day_of_week', data=df_cleaned, palette='plasma')
plt.title('Traffic Accidents by Day of the Week')
plt.xlabel('Day of Week')
plt.ylabel('Number of Accidents')
plt.show()

# Analyze accidents based on weather conditions or road conditions (if available in the dataset)
# Example: 'Weather_conditions' column
if 'Weather_conditions' in df_cleaned.columns:
    plt.figure(figsize=(10, 6))
    sns.countplot(x='Weather_conditions', data=df_cleaned, palette='magma')
    plt.title('Traffic Accidents by Weather Conditions')
    plt.xlabel('Weather Conditions')
    plt.ylabel('Number of Accidents')
    plt.xticks(rotation=45)
    plt.show()

# Visualize accident severity
plt.figure(figsize=(10, 6))
sns.countplot(x='Accident_severity', data=df_cleaned, palette='coolwarm')
plt.title('Traffic Accidents by Severity')
plt.xlabel('Accident Severity')
plt.ylabel('Number of Accidents')
plt.show()

# Explore relationships between two variables: e.g., Accident severity by time of day
plt.figure(figsize=(10, 6))
sns.boxplot(x='Accident_severity', y='hour', data=df_cleaned, palette='Set3')
plt.title('Accident Severity by Time of Day')
plt.xlabel('Accident Severity')
plt.ylabel('Hour of Day')
plt.show()

# You can add more analysis based on available columns in your dataset
# For example: Analysis of 'Sex_of_driver', 'Age_band_of_driver', etc.
